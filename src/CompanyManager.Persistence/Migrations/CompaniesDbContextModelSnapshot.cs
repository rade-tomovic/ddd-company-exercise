// <auto-generated />
using System;
using CompanyManager.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyManager.Persistence.Migrations
{
    [DbContext(typeof(CompaniesDbContext))]
    partial class CompaniesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyManager.Persistence.Domain.Companies.CompanyDbEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CompanyManager.Persistence.Domain.Companies.CompanyEmployeeDbEntity", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.HasKey("CompanyId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CompanyEmployee", (string)null);
                });

            modelBuilder.Entity("CompanyManager.Persistence.Domain.Employees.EmployeeDbEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("Title");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CompanyManager.Persistence.Domain.Companies.CompanyEmployeeDbEntity", b =>
                {
                    b.HasOne("CompanyManager.Persistence.Domain.Companies.CompanyDbEntity", "Company")
                        .WithMany("CompanyEmployees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyManager.Persistence.Domain.Employees.EmployeeDbEntity", "Employee")
                        .WithMany("CompanyEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CompanyManager.Persistence.Domain.Companies.CompanyDbEntity", b =>
                {
                    b.Navigation("CompanyEmployees");
                });

            modelBuilder.Entity("CompanyManager.Persistence.Domain.Employees.EmployeeDbEntity", b =>
                {
                    b.Navigation("CompanyEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
